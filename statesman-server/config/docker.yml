server:
  applicationConnectors:
  - type: http
    port: 8080
  adminConnectors:
  - type: http
    port: 8081
  applicationContextPath: /
  requestLog:
    appenders:
    - type: console
      timeZone: IST

logging:
  level: INFO
  loggers:
    deprecation: ERROR
    org.hibernate: ERROR
    QueuedSender: WARN
    com.codahale.metrics.collectd: ERROR
    io.appform.statesman: DEBUG
  appenders:
    - type: console
      threshold: TRACE
      timeZone: IST
      logFormat: "%(%-5level) [%date] %X{TRACE-ID} [%thread] [%logger{0}]: %message%n"

shards:
  shards:
    - driverClass: org.mariadb.jdbc.Driver
      user: ${DB_USER}
      password: ${DB_PASSWORD}
      url: ${SHARD0_CONNECTION_STRING}
      properties:
        charSet: UTF-8
        hibernate.dialect: org.hibernate.dialect.MySQLDialect
        #hibernate.hbm2ddl.auto: create
      maxWaitForConnection: 1s
      validationQuery: "/* MyApplication Health Check */ SELECT 1"
      minSize: 8
      maxSize: 8
      initialSize: 8
      logAbandonedConnections: true
      logValidationErrors: true
      checkConnectionWhileIdle: true
      checkConnectionOnConnect: true
      validationQueryTimeout: 1s
      removeAbandoned: true
      evictionInterval: 30s
      minIdleTime: 1m
    - driverClass: org.mariadb.jdbc.Driver
      user: ${DB_USER}
      password: ${DB_PASSWORD}
      url: ${SHARD1_CONNECTION_STRING}
      properties:
        charSet: UTF-8
        hibernate.dialect: org.hibernate.dialect.MySQLDialect
        #hibernate.hbm2ddl.auto: create
      maxWaitForConnection: 1s
      validationQuery: "/* MyApplication Health Check */ SELECT 1"
      minSize: 8
      maxSize: 8
      initialSize: 8
      logAbandonedConnections: true
      logValidationErrors: true
      checkConnectionWhileIdle: true
      checkConnectionOnConnect: true
      validationQueryTimeout: 1s
      removeAbandoned: true
      evictionInterval: 30s
      minIdleTime: 1m

swagger:
  resourcePackage: io.appform.statesman.server.resources
  title: Statesman
  description: Statesman Backend

httpActionDefaultConfig:
  connections: 10
  idleTimeOutSeconds: 30
  connectTimeoutMs: 10000
  opTimeoutMs: 10000

eventPublisherConfig:
  server: "${EVENT_INGESTION_ENDPOINT}"
  queuePath: /tmp/statesman
  connections: 10
  idleTimeOutSeconds: 30
  connectTimeoutMs: 10000
  opTimeoutMs: 10000
  disabled: ${EVENT_DISABLED}

foxtrot:
  endpoint: ${FOXTROT_ENDPOINT}
  accessToken: ${FOXTROT_TOKEN}
